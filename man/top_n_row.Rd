% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/matrices.R
\name{top_n_row}
\alias{top_n_row}
\alias{top_n_col}
\title{Utility functions for finding top-ranking row/column elements}
\usage{
top_n_row(m, n)

top_n_col(m, n)
}
\arguments{
\item{m}{matrix}

\item{n}{number of elements to extract. Unlike dplyr's
\code{\link[dplyr]{top_n}}, no account is taken here of the possibility
that the \code{n}th element is tied with the \code{(n + 1)}th (etc).}
}
\value{
a \emph{two-column subscript matrix} with row indices in the first
  column and column indices in the second. This can be used as a single
  subscript to the input matrix \code{m} to yield a vector.
}
\description{
One often wants to know which are the largest n elements in each of the rows
or columns of a matrix. These functions extract the indices of these elements
(using naive ranking).
}
\examples{
m <- matrix(1:9, ncol=3)
ij_row <- top_n_row(m, 2)
ij_col <- top_n_col(m, 2)

# note the resulting grouping by rows/cols
m[ij_row]
m[ij_col]
data.frame(rownum=ij_row[ , 1], value=m[ij_row])

}
